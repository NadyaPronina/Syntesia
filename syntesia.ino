#include <Keypad.h>
const int sinus[1024] { 
            0x800,0x80d,0x819,0x826,0x832,0x83f,0x84b,0x858,0x865,0x871,
            0x87e,0x88a,0x897,0x8a3,0x8b0,0x8bc,0x8c9,0x8d5,0x8e2,0x8ee,
            0x8fb,0x907,0x914,0x920,0x92d,0x939,0x946,0x952,0x95e,0x96b,
            0x977,0x984,0x990,0x99c,0x9a9,0x9b5,0x9c1,0x9cd,0x9da,0x9e6,
            0x9f2,0x9fe,0xa0a,0xa17,0xa23,0xa2f,0xa3b,0xa47,0xa53,0xa5f,
            0xa6b,0xa77,0xa83,0xa8f,0xa9b,0xaa7,0xab3,0xabe,0xaca,0xad6,
            0xae2,0xaed,0xaf9,0xb05,0xb10,0xb1c,0xb28,0xb33,0xb3f,0xb4a,
            0xb56,0xb61,0xb6c,0xb78,0xb83,0xb8e,0xb9a,0xba5,0xbb0,0xbbb,
            0xbc6,0xbd1,0xbdc,0xbe7,0xbf2,0xbfd,0xc08,0xc13,0xc1e,0xc29,
            0xc33,0xc3e,0xc49,0xc53,0xc5e,0xc68,0xc73,0xc7d,0xc88,0xc92,
            0xc9c,0xca7,0xcb1,0xcbb,0xcc5,0xccf,0xcd9,0xce3,0xced,0xcf7,
            0xd01,0xd0b,0xd14,0xd1e,0xd28,0xd31,0xd3b,0xd44,0xd4e,0xd57,
            0xd60,0xd6a,0xd73,0xd7c,0xd85,0xd8e,0xd97,0xda0,0xda9,0xdb2,
            0xdbb,0xdc4,0xdcc,0xdd5,0xdde,0xde6,0xdef,0xdf7,0xdff,0xe08,
            0xe10,0xe18,0xe20,0xe28,0xe30,0xe38,0xe40,0xe48,0xe50,0xe57,
            0xe5f,0xe67,0xe6e,0xe76,0xe7d,0xe84,0xe8c,0xe93,0xe9a,0xea1,
            0xea8,0xeaf,0xeb6,0xebd,0xec3,0xeca,0xed1,0xed7,0xede,0xee4,
            0xeea,0xef1,0xef7,0xefd,0xf03,0xf09,0xf0f,0xf15,0xf1b,0xf21,
            0xf26,0xf2c,0xf31,0xf37,0xf3c,0xf42,0xf47,0xf4c,0xf51,0xf56,
            0xf5b,0xf60,0xf65,0xf6a,0xf6e,0xf73,0xf78,0xf7c,0xf81,0xf85,
            0xf89,0xf8d,0xf91,0xf95,0xf99,0xf9d,0xfa1,0xfa5,0xfa9,0xfac,
            0xfb0,0xfb3,0xfb7,0xfba,0xfbd,0xfc0,0xfc3,0xfc6,0xfc9,0xfcc,
            0xfcf,0xfd2,0xfd4,0xfd7,0xfd9,0xfdc,0xfde,0xfe0,0xfe2,0xfe4,
            0xfe6,0xfe8,0xfea,0xfec,0xfee,0xfef,0xff1,0xff2,0xff4,0xff5,
            0xff6,0xff8,0xff9,0xffa,0xffb,0xffc,0xffc,0xffd,0xffe,0xffe,
            0xfff,0xfff,0xfff,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
            0xfff,0xfff,0xffe,0xffe,0xffd,0xffd,0xffc,0xffb,0xffa,0xff9,
            0xff8,0xff7,0xff6,0xff5,0xff3,0xff2,0xff0,0xfef,0xfed,0xfeb,
            0xfe9,0xfe7,0xfe5,0xfe3,0xfe1,0xfdf,0xfdd,0xfda,0xfd8,0xfd5,
            0xfd3,0xfd0,0xfcd,0xfcb,0xfc8,0xfc5,0xfc2,0xfbf,0xfbb,0xfb8,
            0xfb5,0xfb1,0xfae,0xfaa,0xfa7,0xfa3,0xf9f,0xf9b,0xf97,0xf93,
            0xf8f,0xf8b,0xf87,0xf83,0xf7e,0xf7a,0xf75,0xf71,0xf6c,0xf67,
            0xf63,0xf5e,0xf59,0xf54,0xf4f,0xf4a,0xf44,0xf3f,0xf3a,0xf34,
            0xf2f,0xf29,0xf23,0xf1e,0xf18,0xf12,0xf0c,0xf06,0xf00,0xefa,
            0xef4,0xeee,0xee7,0xee1,0xeda,0xed4,0xecd,0xec7,0xec0,0xeb9,
            0xeb2,0xeab,0xea4,0xe9d,0xe96,0xe8f,0xe88,0xe81,0xe79,0xe72,
            0xe6a,0xe63,0xe5b,0xe54,0xe4c,0xe44,0xe3c,0xe34,0xe2c,0xe24,
            0xe1c,0xe14,0xe0c,0xe04,0xdfb,0xdf3,0xdea,0xde2,0xdd9,0xdd1,
            0xdc8,0xdbf,0xdb7,0xdae,0xda5,0xd9c,0xd93,0xd8a,0xd81,0xd78,
            0xd6e,0xd65,0xd5c,0xd52,0xd49,0xd40,0xd36,0xd2c,0xd23,0xd19,
            0xd0f,0xd06,0xcfc,0xcf2,0xce8,0xcde,0xcd4,0xcca,0xcc0,0xcb6,
            0xcac,0xca1,0xc97,0xc8d,0xc82,0xc78,0xc6e,0xc63,0xc59,0xc4e,
            0xc43,0xc39,0xc2e,0xc23,0xc18,0xc0e,0xc03,0xbf8,0xbed,0xbe2,
            0xbd7,0xbcc,0xbc1,0xbb6,0xbaa,0xb9f,0xb94,0xb89,0xb7d,0xb72,
            0xb67,0xb5b,0xb50,0xb44,0xb39,0xb2d,0xb22,0xb16,0xb0b,0xaff,
            0xaf3,0xae8,0xadc,0xad0,0xac4,0xab9,0xaad,0xaa1,0xa95,0xa89,
            0xa7d,0xa71,0xa65,0xa59,0xa4d,0xa41,0xa35,0xa29,0xa1d,0xa11,
            0xa04,0x9f8,0x9ec,0x9e0,0x9d4,0x9c7,0x9bb,0x9af,0x9a2,0x996,
            0x98a,0x97d,0x971,0x965,0x958,0x94c,0x93f,0x933,0x927,0x91a,
            0x90e,0x901,0x8f5,0x8e8,0x8dc,0x8cf,0x8c3,0x8b6,0x8aa,0x89d,
            0x891,0x884,0x877,0x86b,0x85e,0x852,0x845,0x839,0x82c,0x81f,
            0x813,0x806,0x7fa,0x7ed,0x7e1,0x7d4,0x7c7,0x7bb,0x7ae,0x7a2,
            0x795,0x789,0x77c,0x76f,0x763,0x756,0x74a,0x73d,0x731,0x724,
            0x718,0x70b,0x6ff,0x6f2,0x6e6,0x6d9,0x6cd,0x6c1,0x6b4,0x6a8,
            0x69b,0x68f,0x683,0x676,0x66a,0x65e,0x651,0x645,0x639,0x62c,
            0x620,0x614,0x608,0x5fc,0x5ef,0x5e3,0x5d7,0x5cb,0x5bf,0x5b3,
            0x5a7,0x59b,0x58f,0x583,0x577,0x56b,0x55f,0x553,0x547,0x53c,
            0x530,0x524,0x518,0x50d,0x501,0x4f5,0x4ea,0x4de,0x4d3,0x4c7,
            0x4bc,0x4b0,0x4a5,0x499,0x48e,0x483,0x477,0x46c,0x461,0x456,
            0x44a,0x43f,0x434,0x429,0x41e,0x413,0x408,0x3fd,0x3f2,0x3e8,
            0x3dd,0x3d2,0x3c7,0x3bd,0x3b2,0x3a7,0x39d,0x392,0x388,0x37e,
            0x373,0x369,0x35f,0x354,0x34a,0x340,0x336,0x32c,0x322,0x318,
            0x30e,0x304,0x2fa,0x2f1,0x2e7,0x2dd,0x2d4,0x2ca,0x2c0,0x2b7,
            0x2ae,0x2a4,0x29b,0x292,0x288,0x27f,0x276,0x26d,0x264,0x25b,
            0x252,0x249,0x241,0x238,0x22f,0x227,0x21e,0x216,0x20d,0x205,
            0x1fc,0x1f4,0x1ec,0x1e4,0x1dc,0x1d4,0x1cc,0x1c4,0x1bc,0x1b4,
            0x1ac,0x1a5,0x19d,0x196,0x18e,0x187,0x17f,0x178,0x171,0x16a,
            0x163,0x15c,0x155,0x14e,0x147,0x140,0x139,0x133,0x12c,0x126,
            0x11f,0x119,0x112,0x10c,0x106,0x100,0xfa,0xf4,0xee,0xe8,
            0xe2,0xdd,0xd7,0xd1,0xcc,0xc6,0xc1,0xbc,0xb6,0xb1,
            0xac,0xa7,0xa2,0x9d,0x99,0x94,0x8f,0x8b,0x86,0x82,
            0x7d,0x79,0x75,0x71,0x6d,0x69,0x65,0x61,0x5d,0x59,
            0x56,0x52,0x4f,0x4b,0x48,0x45,0x41,0x3e,0x3b,0x38,
            0x35,0x33,0x30,0x2d,0x2b,0x28,0x26,0x23,0x21,0x1f,
            0x1d,0x1b,0x19,0x17,0x15,0x13,0x11,0x10,0xe,0xd,
            0xb,0xa,0x9,0x8,0x7,0x6,0x5,0x4,0x3,0x3,
            0x2,0x2,0x1,0x1,0x0,0x0,0x0,0x0,0x0,0x0,
            0x0,0x1,0x1,0x1,0x2,0x2,0x3,0x4,0x4,0x5,
            0x6,0x7,0x8,0xa,0xb,0xc,0xe,0xf,0x11,0x12,
            0x14,0x16,0x18,0x1a,0x1c,0x1e,0x20,0x22,0x24,0x27,
            0x29,0x2c,0x2e,0x31,0x34,0x37,0x3a,0x3d,0x40,0x43,
            0x46,0x49,0x4d,0x50,0x54,0x57,0x5b,0x5f,0x63,0x67,
            0x6b,0x6f,0x73,0x77,0x7b,0x7f,0x84,0x88,0x8d,0x92,
            0x96,0x9b,0xa0,0xa5,0xaa,0xaf,0xb4,0xb9,0xbe,0xc4,
            0xc9,0xcf,0xd4,0xda,0xdf,0xe5,0xeb,0xf1,0xf7,0xfd,
            0x103,0x109,0x10f,0x116,0x11c,0x122,0x129,0x12f,0x136,0x13d,
            0x143,0x14a,0x151,0x158,0x15f,0x166,0x16d,0x174,0x17c,0x183,
            0x18a,0x192,0x199,0x1a1,0x1a9,0x1b0,0x1b8,0x1c0,0x1c8,0x1d0,
            0x1d8,0x1e0,0x1e8,0x1f0,0x1f8,0x201,0x209,0x211,0x21a,0x222,
            0x22b,0x234,0x23c,0x245,0x24e,0x257,0x260,0x269,0x272,0x27b,
            0x284,0x28d,0x296,0x2a0,0x2a9,0x2b2,0x2bc,0x2c5,0x2cf,0x2d8,
            0x2e2,0x2ec,0x2f5,0x2ff,0x309,0x313,0x31d,0x327,0x331,0x33b,
            0x345,0x34f,0x359,0x364,0x36e,0x378,0x383,0x38d,0x398,0x3a2,
            0x3ad,0x3b7,0x3c2,0x3cd,0x3d7,0x3e2,0x3ed,0x3f8,0x403,0x40e,
            0x419,0x424,0x42f,0x43a,0x445,0x450,0x45b,0x466,0x472,0x47d,
            0x488,0x494,0x49f,0x4aa,0x4b6,0x4c1,0x4cd,0x4d8,0x4e4,0x4f0,
            0x4fb,0x507,0x513,0x51e,0x52a,0x536,0x542,0x54d,0x559,0x565,
            0x571,0x57d,0x589,0x595,0x5a1,0x5ad,0x5b9,0x5c5,0x5d1,0x5dd,
            0x5e9,0x5f6,0x602,0x60e,0x61a,0x626,0x633,0x63f,0x64b,0x657,
            0x664,0x670,0x67c,0x689,0x695,0x6a2,0x6ae,0x6ba,0x6c7,0x6d3,
            0x6e0,0x6ec,0x6f9,0x705,0x712,0x71e,0x72b,0x737,0x744,0x750,
            0x75d,0x769,0x776,0x782,0x78f,0x79b,0x7a8,0x7b5,0x7c1,0x7ce,
            0x7da,0x7e7,0x7f3,0x800
};

const int triang[1024]{
            0x8,0x10,0x18,0x20,0x28,0x30,0x38,0x40,0x48,0x50,
            0x58,0x60,0x68,0x70,0x78,0x80,0x88,0x90,0x98,0xa0,
            0xa8,0xb0,0xb8,0xc0,0xc8,0xd0,0xd8,0xe0,0xe8,0xf0,
            0xf8,0x100,0x108,0x110,0x118,0x120,0x128,0x130,0x138,0x140,
            0x148,0x150,0x158,0x160,0x168,0x170,0x178,0x180,0x188,0x190,
            0x198,0x1a0,0x1a8,0x1b0,0x1b8,0x1c0,0x1c8,0x1d0,0x1d8,0x1e0,
            0x1e8,0x1f0,0x1f8,0x201,0x209,0x211,0x219,0x221,0x229,0x231,
            0x239,0x241,0x249,0x251,0x259,0x261,0x269,0x271,0x279,0x281,
            0x289,0x291,0x299,0x2a1,0x2a9,0x2b1,0x2b9,0x2c1,0x2c9,0x2d1,
            0x2d9,0x2e1,0x2e9,0x2f1,0x2f9,0x301,0x309,0x311,0x319,0x321,
            0x329,0x331,0x339,0x341,0x349,0x351,0x359,0x361,0x369,0x371,
            0x379,0x381,0x389,0x391,0x399,0x3a1,0x3a9,0x3b1,0x3b9,0x3c1,
            0x3c9,0x3d1,0x3d9,0x3e1,0x3e9,0x3f1,0x3f9,0x401,0x409,0x411,
            0x419,0x421,0x429,0x431,0x439,0x441,0x449,0x451,0x459,0x461,
            0x469,0x471,0x479,0x481,0x489,0x491,0x499,0x4a1,0x4a9,0x4b1,
            0x4b9,0x4c1,0x4c9,0x4d1,0x4d9,0x4e1,0x4e9,0x4f1,0x4f9,0x501,
            0x509,0x511,0x519,0x521,0x529,0x531,0x539,0x541,0x549,0x551,
            0x559,0x561,0x569,0x571,0x579,0x581,0x589,0x591,0x599,0x5a1,
            0x5a9,0x5b1,0x5b9,0x5c1,0x5c9,0x5d1,0x5d9,0x5e1,0x5e9,0x5f1,
            0x5f9,0x602,0x60a,0x612,0x61a,0x622,0x62a,0x632,0x63a,0x642,
            0x64a,0x652,0x65a,0x662,0x66a,0x672,0x67a,0x682,0x68a,0x692,
            0x69a,0x6a2,0x6aa,0x6b2,0x6ba,0x6c2,0x6ca,0x6d2,0x6da,0x6e2,
            0x6ea,0x6f2,0x6fa,0x702,0x70a,0x712,0x71a,0x722,0x72a,0x732,
            0x73a,0x742,0x74a,0x752,0x75a,0x762,0x76a,0x772,0x77a,0x782,
            0x78a,0x792,0x79a,0x7a2,0x7aa,0x7b2,0x7ba,0x7c2,0x7ca,0x7d2,
            0x7da,0x7e2,0x7ea,0x7f2,0x7fa,0x802,0x80a,0x812,0x81a,0x822,
            0x82a,0x832,0x83a,0x842,0x84a,0x852,0x85a,0x862,0x86a,0x872,
            0x87a,0x882,0x88a,0x892,0x89a,0x8a2,0x8aa,0x8b2,0x8ba,0x8c2,
            0x8ca,0x8d2,0x8da,0x8e2,0x8ea,0x8f2,0x8fa,0x902,0x90a,0x912,
            0x91a,0x922,0x92a,0x932,0x93a,0x942,0x94a,0x952,0x95a,0x962,
            0x96a,0x972,0x97a,0x982,0x98a,0x992,0x99a,0x9a2,0x9aa,0x9b2,
            0x9ba,0x9c2,0x9ca,0x9d2,0x9da,0x9e2,0x9ea,0x9f2,0x9fa,0xa03,
            0xa0b,0xa13,0xa1b,0xa23,0xa2b,0xa33,0xa3b,0xa43,0xa4b,0xa53,
            0xa5b,0xa63,0xa6b,0xa73,0xa7b,0xa83,0xa8b,0xa93,0xa9b,0xaa3,
            0xaab,0xab3,0xabb,0xac3,0xacb,0xad3,0xadb,0xae3,0xaeb,0xaf3,
            0xafb,0xb03,0xb0b,0xb13,0xb1b,0xb23,0xb2b,0xb33,0xb3b,0xb43,
            0xb4b,0xb53,0xb5b,0xb63,0xb6b,0xb73,0xb7b,0xb83,0xb8b,0xb93,
            0xb9b,0xba3,0xbab,0xbb3,0xbbb,0xbc3,0xbcb,0xbd3,0xbdb,0xbe3,
            0xbeb,0xbf3,0xbfb,0xc03,0xc0b,0xc13,0xc1b,0xc23,0xc2b,0xc33,
            0xc3b,0xc43,0xc4b,0xc53,0xc5b,0xc63,0xc6b,0xc73,0xc7b,0xc83,
            0xc8b,0xc93,0xc9b,0xca3,0xcab,0xcb3,0xcbb,0xcc3,0xccb,0xcd3,
            0xcdb,0xce3,0xceb,0xcf3,0xcfb,0xd03,0xd0b,0xd13,0xd1b,0xd23,
            0xd2b,0xd33,0xd3b,0xd43,0xd4b,0xd53,0xd5b,0xd63,0xd6b,0xd73,
            0xd7b,0xd83,0xd8b,0xd93,0xd9b,0xda3,0xdab,0xdb3,0xdbb,0xdc3,
            0xdcb,0xdd3,0xddb,0xde3,0xdeb,0xdf3,0xdfb,0xe04,0xe0c,0xe14,
            0xe1c,0xe24,0xe2c,0xe34,0xe3c,0xe44,0xe4c,0xe54,0xe5c,0xe64,
            0xe6c,0xe74,0xe7c,0xe84,0xe8c,0xe94,0xe9c,0xea4,0xeac,0xeb4,
            0xebc,0xec4,0xecc,0xed4,0xedc,0xee4,0xeec,0xef4,0xefc,0xf04,
            0xf0c,0xf14,0xf1c,0xf24,0xf2c,0xf34,0xf3c,0xf44,0xf4c,0xf54,
            0xf5c,0xf64,0xf6c,0xf74,0xf7c,0xf84,0xf8c,0xf94,0xf9c,0xfa4,
            0xfac,0xfb4,0xfbc,0xfc4,0xfcc,0xfd4,0xfdc,0xfe4,0xfec,0xff4,
            0xffc,0x1000,0xffc,0xff4,0xfec,0xfe4,0xfdc,0xfd4,0xfcc,0xfc4,
            0xfbc,0xfb4,0xfac,0xfa4,0xf9c,0xf94,0xf8c,0xf84,0xf7c,0xf74,
            0xf6c,0xf64,0xf5c,0xf54,0xf4c,0xf44,0xf3c,0xf34,0xf2c,0xf24,
            0xf1c,0xf14,0xf0c,0xf04,0xefc,0xef4,0xeec,0xee4,0xedc,0xed4,
            0xecc,0xec4,0xebc,0xeb4,0xeac,0xea4,0xe9c,0xe94,0xe8c,0xe84,
            0xe7c,0xe74,0xe6c,0xe64,0xe5c,0xe54,0xe4c,0xe44,0xe3c,0xe34,
            0xe2c,0xe24,0xe1c,0xe14,0xe0c,0xe04,0xdfb,0xdf3,0xdeb,0xde3,
            0xddb,0xdd3,0xdcb,0xdc3,0xdbb,0xdb3,0xdab,0xda3,0xd9b,0xd93,
            0xd8b,0xd83,0xd7b,0xd73,0xd6b,0xd63,0xd5b,0xd53,0xd4b,0xd43,
            0xd3b,0xd33,0xd2b,0xd23,0xd1b,0xd13,0xd0b,0xd03,0xcfb,0xcf3,
            0xceb,0xce3,0xcdb,0xcd3,0xccb,0xcc3,0xcbb,0xcb3,0xcab,0xca3,
            0xc9b,0xc93,0xc8b,0xc83,0xc7b,0xc73,0xc6b,0xc63,0xc5b,0xc53,
            0xc4b,0xc43,0xc3b,0xc33,0xc2b,0xc23,0xc1b,0xc13,0xc0b,0xc03,
            0xbfb,0xbf3,0xbeb,0xbe3,0xbdb,0xbd3,0xbcb,0xbc3,0xbbb,0xbb3,
            0xbab,0xba3,0xb9b,0xb93,0xb8b,0xb83,0xb7b,0xb73,0xb6b,0xb63,
            0xb5b,0xb53,0xb4b,0xb43,0xb3b,0xb33,0xb2b,0xb23,0xb1b,0xb13,
            0xb0b,0xb03,0xafb,0xaf3,0xaeb,0xae3,0xadb,0xad3,0xacb,0xac3,
            0xabb,0xab3,0xaab,0xaa3,0xa9b,0xa93,0xa8b,0xa83,0xa7b,0xa73,
            0xa6b,0xa63,0xa5b,0xa53,0xa4b,0xa43,0xa3b,0xa33,0xa2b,0xa23,
            0xa1b,0xa13,0xa0b,0xa03,0x9fa,0x9f2,0x9ea,0x9e2,0x9da,0x9d2,
            0x9ca,0x9c2,0x9ba,0x9b2,0x9aa,0x9a2,0x99a,0x992,0x98a,0x982,
            0x97a,0x972,0x96a,0x962,0x95a,0x952,0x94a,0x942,0x93a,0x932,
            0x92a,0x922,0x91a,0x912,0x90a,0x902,0x8fa,0x8f2,0x8ea,0x8e2,
            0x8da,0x8d2,0x8ca,0x8c2,0x8ba,0x8b2,0x8aa,0x8a2,0x89a,0x892,
            0x88a,0x882,0x87a,0x872,0x86a,0x862,0x85a,0x852,0x84a,0x842,
            0x83a,0x832,0x82a,0x822,0x81a,0x812,0x80a,0x802,0x7fa,0x7f2,
            0x7ea,0x7e2,0x7da,0x7d2,0x7ca,0x7c2,0x7ba,0x7b2,0x7aa,0x7a2,
            0x79a,0x792,0x78a,0x782,0x77a,0x772,0x76a,0x762,0x75a,0x752,
            0x74a,0x742,0x73a,0x732,0x72a,0x722,0x71a,0x712,0x70a,0x702,
            0x6fa,0x6f2,0x6ea,0x6e2,0x6da,0x6d2,0x6ca,0x6c2,0x6ba,0x6b2,
            0x6aa,0x6a2,0x69a,0x692,0x68a,0x682,0x67a,0x672,0x66a,0x662,
            0x65a,0x652,0x64a,0x642,0x63a,0x632,0x62a,0x622,0x61a,0x612,
            0x60a,0x602,0x5f9,0x5f1,0x5e9,0x5e1,0x5d9,0x5d1,0x5c9,0x5c1,
            0x5b9,0x5b1,0x5a9,0x5a1,0x599,0x591,0x589,0x581,0x579,0x571,
            0x569,0x561,0x559,0x551,0x549,0x541,0x539,0x531,0x529,0x521,
            0x519,0x511,0x509,0x501,0x4f9,0x4f1,0x4e9,0x4e1,0x4d9,0x4d1,
            0x4c9,0x4c1,0x4b9,0x4b1,0x4a9,0x4a1,0x499,0x491,0x489,0x481,
            0x479,0x471,0x469,0x461,0x459,0x451,0x449,0x441,0x439,0x431,
            0x429,0x421,0x419,0x411,0x409,0x401,0x3f9,0x3f1,0x3e9,0x3e1,
            0x3d9,0x3d1,0x3c9,0x3c1,0x3b9,0x3b1,0x3a9,0x3a1,0x399,0x391,
            0x389,0x381,0x379,0x371,0x369,0x361,0x359,0x351,0x349,0x341,
            0x339,0x331,0x329,0x321,0x319,0x311,0x309,0x301,0x2f9,0x2f1,
            0x2e9,0x2e1,0x2d9,0x2d1,0x2c9,0x2c1,0x2b9,0x2b1,0x2a9,0x2a1,
            0x299,0x291,0x289,0x281,0x279,0x271,0x269,0x261,0x259,0x251,
            0x249,0x241,0x239,0x231,0x229,0x221,0x219,0x211,0x209,0x201,
            0x1f8,0x1f0,0x1e8,0x1e0,0x1d8,0x1d0,0x1c8,0x1c0,0x1b8,0x1b0,
            0x1a8,0x1a0,0x198,0x190,0x188,0x180,0x178,0x170,0x168,0x160,
            0x158,0x150,0x148,0x140,0x138,0x130,0x128,0x120,0x118,0x110,
            0x108,0x100,0xf8,0xf0,0xe8,0xe0,0xd8,0xd0,0xc8,0xc0,
            0xb8,0xb0,0xa8,0xa0,0x98,0x90,0x88,0x80,0x78,0x70,
            0x68,0x60,0x58,0x50,0x48,0x40,0x38,0x30,0x28,0x20,
            0x18,0x10,0x8,0x0
};


const byte ROWS = 4; //four rows
const byte COLS = 4; //four columns

char hexaKeys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};

byte rowPins[ROWS] = {12, 11, 10, 9}; //connect to the row pinouts of the keypad
byte colPins[COLS] = {8, 7, 6, 5}; //connect to the column pinouts of the keypad
Keypad keypad = Keypad( makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS);

bool dur = false;
bool wave = false;

void generate(double coef){
  if (dur && !wave){
    for(int tmr = 0; tmr < 564*coef; ++tmr){             //быстрота (как долго звук звучит)
      for(int i = 0; i < 1024; i += 3*coef){               //зависимость от массива, частота звука (высота ноты)
        analogWrite(DAC1, sinus[i]); 
       }
     }
  }
  
  else if (!dur && !wave){
   for(int tmr = 0; tmr < 64*coef; ++tmr){             //быстрота (как долго звук звучит)
    for(int i = 0; i < 1024; i += 3*coef){               //зависимость от массива, частота звука (высота ноты)
      analogWrite(DAC1, sinus[i]);                      //если умножить на синус, то громче
    }
   }
  }
  
  else if (dur && wave){
    for(int tmr = 0; tmr < 564*coef; ++tmr){             //быстрота (как долго звук звучит)
    for(int i = 0; i < 1024; i += 3*coef){               //зависимость от массива, частота звука (высота ноты)
      analogWrite(DAC1, triang[i]); 
       }
     }
  }
  
  else if (!dur && wave){
   for(int tmr = 0; tmr < 64*coef; ++tmr){             //быстрота (как долго звук звучит)
    for(int i = 0; i < 1024; i += 3*coef){               //зависимость от массива, частота звука (высота ноты)
      analogWrite(DAC1, triang[i]);                      //если умножить на синус, то громче
    }
   }
  }
}

void setup(){
   analogWriteResolution(12);  // set the analog output resolution to 12 bit (4096 levels)

  analogReadResolution(12);
 pinMode (8, OUTPUT);
 pinMode (7, OUTPUT);
 pinMode (6, OUTPUT);
 pinMode (5, OUTPUT);
  
 pinMode (12, INPUT); 
 digitalWrite(12, HIGH);
 pinMode (11, INPUT);
 digitalWrite(11, HIGH);
 pinMode (10, INPUT);
 digitalWrite(10, HIGH);
 pinMode (9, INPUT);
 digitalWrite(9, HIGH);
 
 pinMode(DAC1, OUTPUT);
}

void loop(){
  char key = keypad.getKey();
  
  switch (key){
    default:
      break;
    case '1':
      generate(1);
      break;
    case '2':
      generate(2);
      break;
    case '3':
      generate(3);
      break;
    case '4':
      generate(4);
      break;
    case '5':
      generate(5);
      break;
    case '6':
      generate(6);
      break;
    case '7':
      generate(7);
      break;
    case '8':
      generate(8);
      break;
    case '9':
      generate(9);
      break;
    case '*':
      dur = !dur;
      break;
    case '#':
      wave = !wave;
      break;
  }
}
